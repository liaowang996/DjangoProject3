1、测试框架目录结构
API_TEST_FRAME/
├─ common/          # 公共工具模块
│  ├─common_api.py       #公共接口模块
│  ├─ requests_utils.py  # 接口请求工具
│  ├─ testdata_utils.py  # 测试数据加载
│  ├─ config.py           # 配置文件
│  ├─ config_utils.py     # 配置文件读取
│  ├─ email_utils.py      # 邮件
│  ├─ excel_utils.py     # excel操作
│  ├─ HTMLTestReportCN.py   # 测试报告
│  ├─ sql_utils.py       # sql操作
│  ├─ check_utils.py     # 断言
│  └─ log_utils.py       # 日志配置
├─ api_testcase/    # 接口测试模块
│  └─api_test.py   # 接口测试用例
├─ config/          # 配置文件
│  └─ config.ini         # 环境、日志等配置
├─ log/             #日志存放路径
├─ tests_report/          #测试报告存放路径
├─ test_data/        # 测试数据存放路径
│  ├─ test_demo.xls  #excel测试用例
│  └─ test_demo2.xls #excel测试用例
├─ test_runner       # 运行测试用例
│   └─run_case.py     #执行用例
└─ nb_log_config.py    #日志配置

2、类与方法介绍：
参考：DjangoProject3\API_TEST_FRAME\类、方法介绍.xls


3、拓展：
    优化点1：
    1、测试用例分开；
    2、不习惯每条用例都独立执行；
    优化点2：
    1、数据执行结果反写入excle
    2、测试报告（到企业微信、钉钉、微信）机器人；

    python +unitest+requests
    python + unitest + requests + excel
    python + unitest + requests + mysql

    挑战
    python + uniteset + requests + 网页平台(django\flask)
    结合公司业务场景：
    1.测试数据如何造？
    （1）导入Faker
    （2）造数据并且要导入到excel中
    2、测试环境如何还原？
    （1）数据清洗？---微软造数据工具？？？

    Mock？？？如何使用
    https://github.com/liaowang996/DjangoProject3.git/


    docker pull jenkins/jenkins:lts


